数据类型分类
   值类型
      内置值类型
          基本内置值类型(int,float,....)
	  结构                //基本内置值类型也为结构
	  枚举
      用户自定义值类型
          结构
	  枚举
   引用类型
      内置引用类型
          基本内置引用类型(string ,object)
	  类类型(普通类,抽象类,接口...)
	  数组
	  委托(delegate)
      用户自定义引用类型
          类类型
	  数组
	  委托

值类型:存储在堆栈中,在堆栈中存储的是实际数据
引用类型:存储在堆中,在堆中存储的是对堆栈中对象(实际数据)的引用(引用类型的变量又称为对象)

栈是一种线性结构  先进后出的方式工作-----桶子里放东西
堆是一种链式结构  先进先出的方式工作-----火车进站出站

栈 处理效率高   线性结构,有限   小对象   结构
堆 处理效率低   链式结构,扩展   大对象    类

1.CTS:Common Type System 公共类型系统 属于CLR的一部分
2.CTS定义了.net平台中的所有的数据类型,
        同时提供了面向对象的模型以及各种语言需要遵守的标准
3.简单说:CTS主要包含标准.NEt数据类型和准则集
4.CTS的每一种类型都是继承自一个基类----System.Object
    (C#中所有数据类型都是从Ojbect类派生而来的)

数据类型转换
1.值和值
2.引用和引用
3.值和引用(引用和值)

C#基本内置数据类型
   数值
     整数
	      字节	范围	默认值
       byte   1字节    0-255	0
       short  2字节		0
       int    4字节		0
       long   8字节		0
     浮点数
       float    4		0	
       double	8		0
   非数值
      布尔值
        bool    1   true.false   false
      char	2		 '\0'
      string			 null
      object			 null

Object 为所有类的基类,所有类都直接或间接继承自object 
        所以object赋什么值都可以

int 和Int32的关系:
   Int32 是.NET FrameWork所定义的(CTS管制)
   int是C#的数据类型,只不过等同于Int32

Unicode
定义:Universal Code ,统一码/万国码/单一码,是一种在计算机上使用的字符编码


ASCII:America Standard Code for Information Interchange 美国信息交换标准码
ASCII码：有7位码（代码0-127）和8位码（代码0-255）两种
ASCII：要求记住三个0：48，a：97，A：65

char注意事项: 不能声明为空字符, char ch='';

Console.ReadLine()返回值为string
Console.Read()只读一个,返回值为int

注意:前面用了Console.Read,后面不能用ReadLine,写了也不起作用
     按Ctrl+F5...

数据类型转换
  值到值
     隐式/自动类型转换
        原则:将范围小的转换为范围大的(类型一致)
     显式/强制类型转换
        原则:将范围大的转换为范围小的(类型一致,一般不建议使用)
  值--引用
     装箱:值类型到引用类型,即从值类型到Object类型
        特点:可以显式装箱,也可以隐式装箱
     拆箱:引用类型到值类型,即object类型到值类型
        特点:只能显式的拆箱(必须保证装箱过的)

数据类型转换的方法:
1.Convert--最常用
2.Parse---解析,只能把字符串转换为值类型,源只能是字符串(建议少用)
3.()---强制类型转换,尽量少用
4.as只能用于引用类型的转换


课堂练习 -理论
问题：
1. 变量中存储的值取决于该变量的（） ？
2. C# 中的数据类型分为（）种基本类别，分别是（）
3. 值类型: 存储在（）中，在（）中存储的是实际数据
4. 引用类型: 存储在（）中，在（）中存储的是对（） 中对象（实际数据） 的引用
5. String是什么类型?
6. CTS 的含义是什么，包含了什么？
7. C# 中所有数据类型都是从（） 类派生而来的
8. 什么是装箱
9. 什么是拆箱
答:
1.类型
2.2种基本类型,分别是值类型和引用类型
3.值类型:存储在堆栈中,在堆栈中存储的是实际数据
4.引用类型:存储在堆中,在堆中存储的是对(堆栈)中对象(实际数据)的引用
5.string是引用类型
6.CTS:common type System 公共类型系统,包含.net平台所有的基本数据类型
7.C#中所有数据类型都是从Object类派生而来的
8.装箱:从值类型到引用类型的转换,即值类型到Ojbect类的转换
9.拆箱:从引用类型到值类型的转换,即object类转换成值类型


课堂练习 -实践
判断以下程序分别装箱和拆箱了多少次？ 
 static void Main(string[] args) 
{ 
// 声明布尔型、字符串型、整型、短整型和浮点型变量 
bool test = true; 
short num1 = 19; 
int num2 = 14000; 
string val= "Jamie";
float num3 = 14.5f; 
// 显示变量值 
Console.WriteLine("布尔值 = " + test);   //装箱
Console.WriteLine("短整型值 = " + num1); //装箱
Console.WriteLine("整型值 = " + num2);   //装箱
Console.WriteLine("字符串值 = " + val);  //未装箱
Console.WriteLine("浮点值 = " + num3); } //装箱
}
 


课堂练习 -实践
 判断程序代码中装箱和拆箱的次数
   int i=0 ;  
   String s= "5"; 
   1. Console.WriteLine(i) ; //未装箱
   2. Console.WriteLine(i+s); //装箱
   3. Console.WriteLine(i+"."); //装箱
   4. Console.WriteLine(i+ "."+s); //装箱

