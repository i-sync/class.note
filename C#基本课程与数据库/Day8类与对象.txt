C#的类和对象用于在程序中模拟现实生活的事物的
C#中的类是一种数据类型,用来定义对象的类型的
   类是对象的模板,类可以理解为一组[类]对象
C#的对象是类的实例,是基于类[给定数据类型]的具体的一个实体,每个对象在
   内存中都有自己的存储空间,并且彼此间独立运行.用于在程序中模拟现实生活的事物

面向对象:就是基于对象概念,以对象为中心,
        运用分类和抽象的方法  来认识/理解/刻画客观世界;
        以类和继承为构造机制,  来设计/构建相应的软件系统

           分析问题,找到对象
	   抽象出对象的属性与特点
	   划分出类
	   确定类与类的关系
	   用类来定义程序结构
 
 创建类:使用class关键字定义,里面包括特征和行为
    特征:特点,字段/属性---------静态的
    行为:动作,方法---------动态的
  结论:类是由(成员)变量和(成员)方法构成的
             凡是属于类的都贯以成员的修饰

类的成员:
   字段/方法/构造函数/析构函数
   属性/索引器/事件/嵌套类型------在一个类型中声明另一个类型(内部类)

类中不包括变量,在类中变量被称作字段

声明对象
      类名   对象名  =  new 类名();
      只有new以后,才会由CLR在内存中开辟一片空间
      只有开辟空间后,该对象(变量)才可以用

方法的调用,叫语句,不是类的基本组成成员

.运算符,用于访问成员字段和方法

成员字段/成员方法都是属于对象的

public 所属类(本类/当前类)的成员以及非所属类的成员都可以访问

private 只有所属类可以访问

internal  当前程序集可以访问

访问修饰默认总结
      类的默认访问修饰是:internal
      类的成员(8个)的默认访问修饰是:private

变量类型:
    局部变量:存在于方法中
    成员变量:存在于类中,可用于多个方法访问
 变量作用域:
    局部变量:从其声明到方法结束
    成员变量:在类{}中;
一切变量都要初始化
   1.局部变量必须[由程序员]初始化
   2.成员变量可以不由程序员初始化[有默认值]

重名:
1)局部变量和局部变量重名
    (1)局部变量作用域没有重叠,可以声明多次
    (2)局部变量作用域有重叠,不可以声明多次
2)成员变量和局部变量
    (1)成员变量和局部变量作用域可以重叠
          成员变量被隐藏了,局部变量为主.

this.关键字引用类的当前实例
      限定被相似的名称隐藏的成员变量

类静态成员:
                1.使用static 修饰符定义的成员
                 2.属于类,和所有的类的实例共享,
		 3.类实例之前就被创建了
		           (在静态方法中只能访问静态成员)
		 4.访问:类名.静态字段或方法()

静态成员适用情况:
         1.在对象创建之前就已经存在的,定义为静态成员
	 2.所有对象共有的,定义为静态成员
	 3.使用频繁or功能性的操作定义为静态成员


