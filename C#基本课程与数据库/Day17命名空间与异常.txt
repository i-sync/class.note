			命名空间
---------------------------------------------------------
命名空间(namespace)是对类和其它命名空间的一个逻辑(层次)划分
    1..Net Framewrok类库由命名空间组成
    2..Net Framework使用命名空间来组织它的众多类
    3.嵌套命名空间:在一个命名空间中声明另一个命名空间
命名空间作用?
    1.专用于组织代码
    2.用于避免命名冲突,使代码简洁,有条理,便于维护与访问

语法:(与类的定义过程相似)命名空间是隐式公共的,不能为受保护       的,私有的或内部的,在声明时前面不应加任何访问修饰符

使用限定命名会使代码变长且容易混淆
使用命名空间指令using可以使长且容易混淆的名称变得简短而且有意义

using别名指令:从命名空间中只提取一个类,并将其放入作用域中
using 别名名称=到命名空间或类的完全限定路径
     注意:using 别名,并不是引入了命名空间
     using .Sony.Television;
     using STel = Sony.Television
     第一句话的意思是引用了命名空间,可以直接使用Television里的所有类
     第二句话的意思是将Sony.Television的引用赋值给STel,

using为引入命名空间,必须位于namespace之上


帕斯卡命名法:首字母大写,其余首字母大写
	命名空间,类,属性,方法
骆驼命名法:首字母小写,其余首字母大写
	成员字段,变量
所以说:在C#中见到的都是大写的(帕斯卡命名法)
命名原则:
    公司名称.项目名称.模块名称

			类库
-------------------------------------------------------
基类库可以被所有.Net支持的语言共享

			异常
--------------------------------------------------------

异常处理方法
1.try...catch
3.try...catch...finally
5.throw语句
异常:是程序执行时遇到的任何错误或非正常/特殊/意外情况.

异常是可以人为解决的

异常是出现错误时由运行库产生的
异常是一个对象,该对象是System.Exception类或其派生类

try...catch...catch ..
多个catch块的异常类有继承关系,则基类必须位于后边的catch块

