			程序集
-------------------------------------------------
程序集的表现形式:.exe或.dll文件

程序集和应用程序的区别
程序集:安全,看不到代码
应用程序:不安全,将代码暴露

程序集是类型和资源可重用的,安全的,自我描述的,有版本号的部署单元
    构成:程序集是程序包,包含类型[代码]/资源/版本信息[版本号],清单
    1.类型是适用于.net运行库的中间语言代码,是安全的
    2.清单是进行自我描述的
    应用:程序集是逻辑功能单元,是部署单元,是共享和重用代码的方式
    1.程序集是.Net Framework应用程序的基本构造块
    2.程序集[类型和资源]是可重用的
    3.作为共享和重用代码的方式,和Dll类似,程序集也叫逻辑/托管DLL
程序集可以包含一个或多个模块

 物理构成:清单(程序集元数据):见下
           元数据(类型元数据):见下
	   MSIL:中间代码
	   资源:图片、图像、文件等等

元数据:描述数据的数据,或者描述对象的属性的数据
类型元数据:描述数据类型的
程序集元数据:描述程序集的

版本号:任何程序集都必须有版本号
    由四部分组成:主版本号,次版本号,修订号,内部版本号

地域问题:同名一个软件只能存在一个版本,低版本的会被高版本的替代,不能共存


		作用:共享和代码的重用

		重用代码	类文件		使用提供	语言	地域问题	注册
		的方式		源代码		功能
	
		直接拷贝	不安全

阶段1(Dll)	dll		保护		可以		依赖

阶段2(Dll)	com		保护		可以		不	存在		存在

阶段3(程序集)	程序集		保护		可以		不	不		不
		逻辑DLL


共享的几个阶段:
0.源代码的拷贝,能共享,但不能保护源文件
1.dll时代(dll),给用户dll文件能共享,能保护源文件,但不能跨语言
2.com时代,给用户com文件,能共享,能保护源文件,与语言无关,但是有地域问题,需要注册
3.程序集时代(dll,exe),给用户程序集文件,能共享,能保护源文件

DLL (dynamic link library动态连接库)
    是一个包含由多个程序同时使用的代码和数据的库
作用:代码重用
优点:
    有助于促进重用和内存的有效使用
    通过使用DLL,可以实现程序的模块化开发,便于代码重用和维护,大大提高开发效率
    通过使用DLL,可以简化部署和安装
	
程序集的类型:私有程序集和共享程序集

私有程序集:默认情况下,C#程序编译为私有程序集,
	需要放在应用程序所在的文件夹
	程序集的名称在应用程序中唯一
共享程序集:可以被不同的应用程序共享
	在所有使用程序集的应用程序中,共享程序集名称在全局程序集缓存(文件夹)中应当是唯一的
	放在全局程序集缓存[文件夹]中
共享程序集:可以审美观点不同的应用程序共享

命名空间和程序集
命名空间(逻辑命名机制):是对类的一个逻辑上的划分,避免重名问题
程序集(物理分组机制):部署单元,可以重用


				反射
	------------------------------------------------
用于在运行时检索对象的相关信息(对象的类型,成员等信息)
System.Reflection命名空间包含了一些类和接口，可以获取类的相关信息


