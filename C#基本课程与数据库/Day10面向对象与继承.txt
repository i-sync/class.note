			OOP的基本特征
-------------------------------------------------
◆oo(object-Oriented面向对象):既是一种思想,也是一种方法
◆面向对象的主要特征:继承/多态/封装
◆面向对象的主要优点:利于代码重用和软件的可维护性/提高软件开发效率和质量

◆面向对象的程序设计完全不同于传统的面向过程程序设计,
	它大大降低了软件开发的难度,使编程就像搭积木一样简单,
	是当今软件编程的潮流

◆OOA:Object-Oriented Analysis 面向对象分析
◆OOD:Object-Oriented Design 面向对象设计
◆OOP:Object-Oriented Programming 面向对象程序设计
	1.C#中的OOP指的就是:利用C#语言的OO特性编写程序,
	如: 类/对象/继承/多态/封装
	2.OOP可以实现软件的三个主要目标:可复用/易扩展/易维护
	3.OOP也有缺点,由于面向更高的逻辑抽象层,使得在实现的时候不得不做出性能上的牺牲

◆用OO的方法开发一个小程序,分析设计实现的基本步骤如下:
	第一步:确定解决的问题
	第二步:确定角色[类]:运用分类和抽象的方法确定问题域的类别
	第三步:确定特征:确定每个类别的共同特征
	第四步:确定行为:确定每个类别的共同行为或操作
	第五步:根据类的特征,确定类的数据类型(结构,类,抽象类,密封,接口,静态类)
	第六步:转换数据类型表示类(成员字段,方法)

抽象是从众多的事物中抽取出共同的/本质性的特征,而舍弃其非本质的特征.
	
抽象的目的:抽象主要是为了使复杂度降低,以得到论域中简单的概念,
	好让人们能够控制其过程或以综观的角度来了解许多特定的事态.
抽象是认识复杂现象过程中使用的思维工具,即抽出事物本质的共同的特性而
	暂不考虑它的细节,不考虑其他因素.
						
			继承
-------------------------------------------------
继承:在声明类时,在类名称后放置一个冒号,然后指定要继承的类
语法:
	public class A : B
	{
		//成员字段,方法
	}
	说明:A继承了B,A将拥有B中所有非私有的成员的访问权
	A的叫法:子类or派生类
	B的叫法:父类or基类
继承的好处:代码重用
	
C#只支持单一继承,不支持多继承,但是可以多接口实现

Protected : 受保护的访问修饰符
    特点:在子类中可以访问父类中受保护成员(而不是子类对象)
	 在非子类中不可访问
   
base:从子类中访问父类成员(字段,方法,构造函数),最常用于:调用基类的构造函数
	指父类对象(this指本类)

当发生继承关系时,
	是先调用父类构造函数,然后再调用子类的构造函数
	Person是父类	Student是子类
	在Sutdent中 public Student() : base()	//默认有:base()
	{
		//构造体
	}


