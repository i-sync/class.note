		        数组
---------------------------------------------------
数组是在内存中连续存储多个相同的数据类型元素的结构
优点:便于存储/查找


数组元素表示数组中存储的值
数组长度(大小)指数组中存储的值的总数
数组秩指数组的总维数(数组名.Rank)

数组下标:标明元素在数组中的位置(从0开始)

类型:一维数组(有行)---------用得最多,重点掌握
     二维数组(有行有列)-----掌握
     三维数组(立体的)-------不要求掌握

声明:1)先声明,再初始化
      int[] score;
      score=new int[3];
      score[0]=1;
      ...
      ...
     2)声明同时初始化-----最常用
     int[] score=new int[3];
      score[0]=1;
      ...
      ...
     3)声明同时初始化并赋值
     int[] score=new int[3]{1,2,3};
     4)声明并赋值
     int[] score={1,2,3};
     5)
     int size=Convert.ToInt32(Console.ReadLine());
       int [] score=new  int[size];
     6).System.Array是抽象的基类,提供CreateInstance方法来创建数组
       Array obj=Array.CreateInstance(typeof(int),4);

  数组的赋值和取值都是通过索引和下标(从0开始,到lenth-1结束)
  //错误的,int[] arr; 
             arr[0]=1; 使用前必须初始化(在内存中分配内存)
foreach:循环遍历集合或数组
       foreach(数据或集合元素的数据类型 变量名 in 数据或集合)
       {
       }
foreach和for的比较:
    1.foreach遍历速度快,并且只能遍历数组或集合所有数据
    2.foreach不能做数据的修改,只能遍历
    3.for遍历速度慢于foreach ,但是可以做数据修改,还可以遍历其中的一部分数据
选择for还是foreach的原则
    只遍历则使用foreach,因为速度快

char类提供了很多方法,便于我们使用
    isLetter(判断是否是字母)
    isDigit(判断是否为数字)
    isPuntution(判断是不是标点符号)

数组和集合:数组的访问速度比集合快.

补充:typeof(数组类型) 获取到的是Type类型(Framework中的)
     typeof(int)可得到int的所属Type类型,获取.Net Framework类库中的

二维数组:有行有列
         int[,]num=new int[3,3];
	 int [,] num ={{5,6,7},{1,2,6}};
	 注意:二维数组用数值初始化,必须加{}
	 如果有多行,要保证每一行的列相同,可用0代替


Array:所有数组的基类
     Array arr=Array.CreateInstance(typeof(int ),6);
     int [] arr=new int[6]

     setValue赋值
     GetValue取值
     Length获取长度
     IndexOf查找首次出现的索引
     LastIndexOf查找末次出现的索引
     Sort排序
     Reverse反转

			枚举
--------------------------------------------------------------
枚举(enum,Enumerator的缩写)
    是一组已命名的数值常量组成的数据类型
 优点:使代码更清晰/易读/提高开发效率/便于维护/访问
 何时用:如果程序中需要定义多个常量,这些常量表示的含义类似[逻辑上密不可分]
      我们可以枚举来表示这一组数,如季度的四个季节,一周的各天,国家/地区名称,等.
 特点:值类型,枚举中的所有成员都是常量
 语法:enum 枚举名[:基础类型]   
      {
         枚举成员,
	 枚举成员=值;(可有可无)
	 ...
	 ...
      }
 注意:1.枚举的基础类型(可有可无)可以是除char以外的任何整形,有byte/sbyte/short/int.../默认int
      2.默认情况下,第一个枚举成员的值为0, 后面的值依次递增1.也可以为每个枚举成员设定初始值(建议).
      3.建议声明枚举时,赋一个None值为0,
System.Enum类型(很少使用)是所有枚举类型的基类,它本身不是枚举类型
   System.Object
       System.ValueType
             System.Enum
System.Enum类提供了一些方法,主要用来获取枚举成员的名称和值
      Enum.GetNames(typeof(枚举名))返回值为string[]
      Enum.GetValues(typeof(枚举名))返回值为Array数组


			交错数组
---------------------------------------------------
交错数组:也是数组的一种,本质上是一维数组,是多个一维数组的组合

交错数组/一维数组/二维数组/枚举比较
类型一样	含义一样	数组不变	枚举
类型一样	含义一样	数据可变	数组一维
类型一样      分组,每组含义一样	    可变	数组(二维)
类型一样	含义类似    可变(每组个数不同)   交错数组



























