			方法
---------------------------------------------------------
方法是定义在类或结构中的/包含一系列的语句的代码块.
     方法实现了一定的功能,类或对象调用方法来完成特定的功能.
     优点:减少代码的重复
   语法:
   [访问修饰符]返回值类型(没有返回值用Void)
   五要素:
       1.访问修饰符
       2.返回值类型(没有返回值的用Void)
       3.方法名称(首字母大写并且有意义)
       4.参数,放在()中(可以没有参数,但是()必须有)
       5.方法体,放在{}中
 方法返回类型   1)void类型  2)非void类型
 C#语言中的return语句用于向调用方法返回值
 语法:return[表达式];
      return语句[向调用方法]返回值,表示立即返回
      如果方法为void类型,则可以省略return语句,
      若写则语法:return;
      如果方法不是void类型,则必须写return语句.
      语法:return 表达式
      注意:1)表达式可以是简单的常量或变量(建议),也可以是复杂的表达式
           2)表达式的值必须和方法的返回类型一致[或兼容]
	   (1类型相同,2方法返回值类型为父类,return后面的表达式为子类)
	   3)必须保证每一条可能的路径都要有return存在
建议:不要在代码块中写return,而应该写在方法体中

 方法的参数
    1.形参(形式参数)
        出现在方法的声明,同声明变量,
    2.实参(实际参数)
        出现在方法调用方,指实际数值
 方法的调用:
   方法名称(实参)

方法注意:
1.方法要实现独立的功能,尽量避免一个方法执行多个功能
2.方法不能独立存在,必须依附于类或结构
3.方法优点:减少代码重复,提高复用性


F10:逐过程(跳过方法):用于方法已经调试过了的
F11:逐语句(不跳过方法)

			变量
-----------------------------------------------------------
变量的类型:成员变量和局部变量
成员变量:属于对象的,在类中定义,作用范围:从声明到类的}结束
局部变量:属于方法的,在方法中定义,作用范围:从声明到方法的}结束


值类型和引用类型
 1.值类型作为参数传递时,传递的是值的副本
   在方法中将值类型变量改变后,不会影响原值
 2.引用类型作为参数传递时,传递的是地址(引用的副本)
   在方法中将引用类型变量改变后,会影响原值
   引用类型:类/委托/数组/接口/Object/String 
      Object ,String 比较特殊,因为内部将equals方法重写了,
      作为参数时,传递的就是值的副本,而非引用的副本

赋值号=
1.=号左右两边为值类型,则意义为赋值(值传递)
2.=号左右两边为引用类型,则意义为指向(引用传递)

int a,b  a=b;//赋值
class a,b  a=b //指向 (a指向了b,内存地址是b的地址)


ref 与 out 
1.ref可将值类型变量按引用类型传递
  ref 只能出现在形参或者实参中,并且是同时存在的
2.out可将值类型变量按引用类型传递
  out 只能出现在形参或者实参中,并且是同时存在的

区别:
ref:侧重于传入,传入前必须赋初始值,
    在方法中可以不必修改变量的值
out:侧重于传出,传入前不需要初始化
    在方法体中是必须要修改变量的值


params:用于修饰可变参数的数组
  注意事项: 1.一个方法定义只能出现一次params
	       并且只能修饰最后一个参数
            2.只能修饰数组([])
	    3.调用时,可以不传params修饰的参数


方法重载(OverLoad,OverLoading):是多态性的一个表现
   概论;发生在一个类中,
        方法名称相同,
	参数个数不同或参数类型不同

   方式:参数个数不同或者参数类型不同
重载是多态性的一个表现,多态就是指多种形态
 当发生重载时,我们只需要传入参数,
 由编译器自动选择去调用哪个方法(运行时确定)

 何时用方法重载
    如果一个类有多个方法,其中两个或以上的方法功能有类似之处
    那么,这两个或以上的函数最好用重载来创建
    

练习
1. 定义一个方法，模拟超市购物 输入：100元人民币
输出：物品是两箱牛奶 找零20元人民币 赠品：一个购物袋
      使用ref,out和返回值来做，要求，分析适用情况
 
两箱牛奶      return
20		ref
一个购物袋	out

参数传递的方式		参数
值以值方式		值类型(int,byte....)-----最常用
值以引用方式		ref,out 值类型(int,byte...)
引用以值方式		引用(数组,类...)-----最常用
引用以引用方式		ref,out 引用类型(数组,类....


让方法返回值的方法有
1.return:用得最多,真正想要的结果
2.ref:侧重于传入值,也可以做输出
3.out:侧重于传出值

ref的常用方式:前提在类库中写方法,在前台调用
























