封装:把由客观事物抽象得到的数据和行为包含到一个单元[如类]中;
     然后把所有的数据隐藏起来,并尽可能多的隐藏内部实现细节,
     仅对外提供简捷一致的公共接口(广义地),即只能通过属性,
     索引器,方法或委托来访问[读写,检索和修改]数据
封装具体包含两个方面:
      1.将数据与方法紧密结合:把客观事物抽象得到的数据和行为
        包含到一个单元中;用结构,类,封闭或抽象类等来包含
      2.控制可访问性:隐藏数据和内部实现细节,即把数据指定为私有或保护的等,
	同时提供属性,索引器,方法,委托来访问
封装的目的:增强安全性和简化编程
封装的原则:
    1.把所有数据隐藏起来,不要直接访问,要通过属性/索引器或方法来间接访问
    2.尽可能多的隐藏内部实现细节,仅对外提供简捷一致的公共接口
属性的类型:1.读写属性;	2.只读属性(存储那种不可变的值);	3.只写属性(用得最少)

静态属性用于封装静态字段,应用于整个类而不是类的实例
属性与字段的区别:
	字段占有内存空间,属性不占空间,因为编译器将属性翻译成get和set方法


索引器是C#一个种语法
	是用于访问类的集合类型成员变量的类的成员
语法:[访问修饰符]数据类型(1) this[参数数据类型(2) 标识符]
     {
	get{ ... }
	set{ ... }
     }
     this指的是索引器的名称
     (1)的意义:指数组或集合元素的数据类型,同foreach
     (2)的意义:使用索引器访问时[]里面的参数
		如果想使用下标访问,那就写int index
		如果想使用名称访问,那就写string name

特点:索引器至少要有一个索引器参数,索引器可以重载
为何使用索引器:
	1.索引器是实现封装的一种方式,起到保护类成员作用,使用起来简单方便
	2.为类的集合对象[集合类型成员]创建索引器后,可以对类对象指定索引
	来直接访问集合对象的元素
	3.通过索引器可以访问私有集合类型成员变量的元素
	
使用方法:对集合对象创建索引器,通过类对象来访问
	类MyClass 对象msd1101  集合元素Student [] students=new Student[10];
	对students创建索引器	,通过msd1101来访问

索引器,将集合类型成员变量按照单个集合元素来访问
索引器是由类对象来调用的,所以名称为this ,因为this 就是类对象

索引器与数组比较
1.索引器不指向内存位置
2.索引器可以有非整数的下标[索引],而数组不能

索引器与属性比较
1.索引器与属性类似---封装方式,只是封装的成员类型不一样的;
   索引器封装的是集合或数组类型成员字段
   属性封装的普通的成员字段
2.属性可以为静态或非静态,而索引器不可以为静态
   因为索引器名称为this,只能通过对象来访问,而静态成员变量类名调用
3.属性没有参数,索引器有参数,放在[]里面

	
